ARCH=linux-x86
PROG=ce
CFLAGS=-g -O -Wall
WRAP=YES
LIBELF_PATH=/home/till/rtems/libelf-0.8.0
#REGEXP_PATH=/home/till_tp/till/xfm/regexp
REGEXP_PATH=/home/till/slac/xfm/regexp
#NOTE: must be bison, because we want a reentrant
#      parser (%pure_parser)
YACC=bison
YFLAGS=-v -d -p cexp
INCS=-I$(LIBELF_PATH)/lib -I $(LIBELF_PATH)/build-$(ARCH)/lib -I$(REGEXP_PATH) 
DEFS=-DNO_THREAD_PROTECTION -DDEBUG

MAKEDEPEND=gccmakedep

sym_OBJS=
exmpl_OBJS=
ce_OBJS=elfsyms.o cexp.tab.o vars.o ctyps.o
ce_LIBS=-lreadline -lncurses -L$(REGEXP_PATH) -lregexp -lm
elfsyms_DEFS=-DCEXP_TEST_MAIN
elfsyms_OBJS=ctyps.o
vars_DEFS=-DTEST_VARS
vars_LIBS=-lreadline -lncurses

WRAP_OBJS_YES=wrap.o
WRAP_OBJS_NO=

WRAP_LDFLAGS_YES=-Wl,--wrap=lseek -Wl,--wrap=mmap -Wl,--wrap=munmap -Wl,--wrap=ftruncate
WRAP_LDFLAGS_NO=

OBJS=$($(PROG)_OBJS) $(PROG).o $(WRAP_OBJS_$(WRAP))
WRAP_LDFLAGS=$(WRAP_LDFLAGS_$(WRAP))
LIBS=$($(PROG)_LIBS) 
DEFS+= $($(PROG)_DEFS)
INCS+= $($(PROG)_INCS)
CFLAGS+=$($(PROG)_CFLAGS) $(DEFS) $(INCS)

# This only works as long as C++ is not involved... */
SRCS=$(OBJS:%.o=%.c)


all: $(PROG)

$(PROG): $(OBJS)
	$(CC) $(CFLAGS) -o $@ $^ -L $(LIBELF_PATH)/build-$(ARCH)/lib $(WRAP_LDFLAGS) -lelf $(LIBS)

cexp.tab.c cexp.tab.h: cexp.y
	bison $(YFLAGS) $^

gentab: gentab.c
	$(CC) -O -o $@ $^

jumptab.c: gentab
	./$^ > $@

ctyps.o: ctyps.c jumptab.c
	$(CC) -c $(CFLAGS) -o $@ $<

%.o:	%.c
	$(CC) -c $(CFLAGS) -o $@ $^

clean:
	$(RM) -f $(PROG) $(OBJS) wrap.o *.tab.c *.tab.h cexp.output

elfsyms.c: cexp.h
cexp.h: cexp.tab.h

depend:	cexp.tab.h
	$(MAKEDEPEND) $(DEFS) $(INCS) $(SRCS)
